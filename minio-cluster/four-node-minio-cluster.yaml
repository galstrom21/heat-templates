heat_template_version: 2014-10-16

description: >
  This template will provision a four node minio cluster.

parameters:
  minio_url:
    type: string
    default: "https://dl.minio.io/server/minio/release/linux-amd64/minio"
  mc_url:
    type: string
    default: "https://dl.minio.io/client/mc/release/linux-amd64/mc"
  access_key_length:
    type: number
  secret_key_length:
    type: number
  key_name:
    type: string
  image:
    type: string
  flavor:
    type: string

resources:
  minio_access_key:
    type: "OS::Heat::RandomString"
    properties:
      length: { get_param: access_key_length }
  minio_secret_key:
    type: "OS::Heat::RandomString"
    properties:
      length: { get_param: secret_key_length }
  cluster_ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      save_private_key: True
      name: deploy_key

  install_minio:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: ssh_priv_key
      - name: ssh_pub_key
      - name: minio_url
      - name: mc_url
      - name: minio_access_key
      - name: minio_secret_key
      - name: node1_ip
      - name: node2_ip
      - name: node3_ip
      - name: node4_ip
      config: {get_file: templates/install_minio.sh}

  deploy_minio:
    type: "OS::Heat::SoftwareDeploymentGroup"
    properties:
      config: {get_resource: install_minio}
      servers: {
        '0': {get_resource: node_01},
        '1': {get_resource: node_02},
        '2': {get_resource: node_03},
        '3': {get_resource: node_04}
      }
      input_values:
        ssh_priv_key: { get_attr: [ cluster_ssh_key, private_key ] }
        ssh_pub_key: { get_attr: [ cluster_ssh_key, public_key ] }
        minio_url: { get_param: minio_url }
        mc_url: { get_param: mc_url }
        minio_access_key: { get_resource: minio_access_key }
        minio_secret_key: { get_resource: minio_secret_key }
        node1_ip: { get_attr: [ node_01, addresses, private, 0, addr ] }
        node2_ip: { get_attr: [ node_02, addresses, private, 0, addr ] }
        node3_ip: { get_attr: [ node_03, addresses, private, 0, addr ] }
        node4_ip: { get_attr: [ node_04, addresses, private, 0, addr ] }

  boot_config:
    type: "Heat::InstallConfigAgent"

  node_01:
    type: "OS::Nova::Server"
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_attr: [boot_config, config]}

  node_02:
    type: "OS::Nova::Server"
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_attr: [boot_config, config]}

  node_03:
    type: "OS::Nova::Server"
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_attr: [boot_config, config]}

  node_04:
    type: "OS::Nova::Server"
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_attr: [boot_config, config]}

outputs:
  minio_access_key:
    value: { get_resource: minio_access_key }
  minio_secret_key:
    value: { get_resource: minio_secret_key }
